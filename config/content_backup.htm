<h1>About</h1>
<p>課程名稱: 協同產品設計實習 - Collaborative Product Design Practice</p>
<p>學員作業網站: <a href="https://mdecd2025.github.io/hw-Spirit0224/content/index.html">https://mdecd2025.github.io/hw-Spirit0224/content/index.html</a></p>
<p>學員作業倉儲: <a href="https://github.com/mdecd2025/hw-Spirit0224">https://github.com/mdecd2025/hw-Spirit0224</a></p>
<hr/>
<p>課程代號: cd2025</p>
<p>Teams 線上教學:</p>
<p style="padding-left: 30px;">以 "學號@nfu.edu.tw" 登入<span> </span><a href="https://login.microsoftonline.com/">https://login.microsoftonline.com/</a><span> </span>Office 365</p>
<p style="padding-left: 30px;">Teams 團隊代碼: <span>p5z4eku</span></p>
<hr/>
<p>課程評分:</p>
<p style="padding-left: 30px;">Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單</p>
<p style="padding-left: 30px;">Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單</p>
<p style="padding-left: 30px;">Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單</p>
<p></p>
<h1>Week</h1>
<p>記錄每周上課內容</p>
<h2>w1</h2>
<p>Python 更新</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ys-K4rsSOB8?si=tmqypcbmqfn0qLGp" title="YouTube video player" width="560"></iframe></p>
<h2>w3</h2>
<p>列出甲乙兩班未分組的學員</p>
<pre class="brush:csharp;auto-links:false;toolbar:false" contenteditable="false"># 甲班學員資料處理
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
 
# 顯示甲班標題
print("甲班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in a_all_members:
        print(stud_num)
 
# 乙班學員資料處理
url = "https://mde.tw/list/2b.txt"
data = open(url).readlines()
all_stud = data[1:]
b_all_members = ['41223251', '41223211', '41223245', '41223243', 'jjjay41223212', 'leeshaowei0716', '41223234', '41223209', '41223205', '41223201', '41223202', '41223208-hw', '41223216', '41223217', '41223248', 'emma0312', '41223242', '41223203', '41223144', '41223235', 'RAY41223215', 'hyy41223228', '41223227', '41223206', '41223226-0', 'Cloud41223237', 'Yujenchuang', '41223225', 'ljg41223220', 'supowen', 'jacky93111', '41223246', 'Liu41223244', '41223236', '41223219', '41271237', '41223249', '41223229', '41223224', '41223222', '41223231', 'linryan23', '41023114', '41223230', 'timluo123', 'CYC41223247', '41223218', 'ych0227', '41023215', '41023216', '41023213', '41071203', '41071204', '41071202', 'c-ching', 'YUN4', 'tseYU000', 'snowfall-killer', 'junpig10']
 
# 顯示乙班標題
print("\n乙班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in b_all_members:
        print(stud_num)</pre>
<p>結果:</p>
<p>甲班:<br/>41023220<br/>41223111<br/>41223119<br/>41223124<br/>41223148</p>
<p>乙班:<br/>40923137<br/>41023237<br/>41223210<br/>41223214<br/>41223232<br/>41223233<br/>41223239<br/>41271217<br/>41271236</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/9q08eoJuA4k?si=Sg-JxWMzf87cnc9V" title="YouTube video player" width="560"></iframe></p>
<h2>w4</h2>
<p>利用ipv6開啟近端</p>
<p>需改內容</p>
<p><img alt="" height="267" src="/images/螢幕擷取畫面 2025-03-28 160447.png" width="475"/></p>
<p></p>
<p>*a後面數值要去按照座號順序輸入</p>
<p><img alt="" height="365" src="/images/螢幕擷取畫面 2025-03-28 160639.png" width="380"/></p>
<p>*IP位置需改成ip6設的ip</p>
<p><img alt="" height="364" src="/images/螢幕擷取畫面 2025-03-28 160810.png" width="377"/></p>
<p>*要改成git@後面加你在PUTTY所設定的名稱</p>
<p>*在進入網頁前每次需要打git pull來更新進度</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/5Jv5A-1fHC4" width="560"></iframe></p>
<h2>w5</h2>
<h4 class="anchor-header" id="addanepuckrobot" name="add-an-e-puck-robot"><span>電子冰球機器人</span></h4>
<h4 class="anchor-header" name="add-an-e-puck-robot"><strong><span>動手操作#1</span></strong><span>：雙擊圖示</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/starting-webots"><span>啟動 Webots</span></a><span><span> </span>（或從終端機中的命令列呼叫它）。如果您是第一次在此電腦上執行 Webots，系統可能會提示您選擇圖形主題。您也可能會被邀請參加 Webots 導覽，繼續並關閉導覽。</span></h4>
<p><span>如果您從未見過，請花一些時間查看導覽中的演示。他們正在講述很多關於 Webot 的可能性。您也可以從 Webots 的</span><em><span>說明</span></em><span>選單取得導覽。</span></p>
<h4 class="anchor-header" id="createanewworld" name="create-a-new-world"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots?tab-language=python#create-a-new-world"><span class="anchor-link-image"></span></a><span>創造新世界</span></h4>
<p><span>世界是一個文件</span><strong><span>，</span></strong><span>其中包含諸如物體在哪裡、它們是什麼樣子、它們如何相互作用、天空是什麼顏色以及重力、摩擦力、物體質量等定義等資訊。它定義了模擬的初始狀態。不同的物件稱為</span><strong><span>節點，並在</span></strong><span></span><strong><span>場景樹</span></strong><span>中以層次結構組織。因此，一個節點可能包含子節點。世界儲存在具有</span><code>.wbt</code><span>副檔名的檔案中。此文件格式源自</span><strong><span>VRML97</span></strong><span>語言，易於人類閱讀。世界檔案必須直接儲存在名為的目錄中</span><code>worlds</code><span>。</span></p>
<p><span>這裡所說的世界是一個文件文件，其中包含物品所在位置、外觀、以及如何與環境及其他物品互動、天空的顏色與重力、摩擦力、物品品質等資訊。 此外，文件中也定義了模擬的實質狀態。</span></p>
<p><span>模擬場景中的各個物件稱為節點，採樹狀架構排列。 其中的節點可以包含子節點。 模擬場景的檔案副檔名為.wbt，奧webots中取wbt三個字母所組成。 此檔案格式源自VRML97語言，內容為明碼，可直接由文字編輯器讀取或編輯。 模擬場景檔案則規定必須能夠在名稱為 worlds 的目錄中儲存。</span></p>
<blockquote>
<p><strong><span>動手操作#2</span></strong><span>：按一下3D 視圖的</span><code>Pause</code><span>按鈕暫停目前模擬（請參閱<a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-user-interface#simulation-menu">使用者介面說明</a>以了解按鈕）。如果主工具列上的虛擬時間計數器停止，則模擬將暫停。從<strong>檔案/新建/新專案目錄...</strong>選單項目建立一個新專案並按照說明進行操作：</span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/pause-button.png" width="26"/><span></span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-user-interface#simulation-menu"><span></span></a><span></span><strong><span></span></strong><span></span></p>
<ol>
<li><span>命名專案目錄，</span><code>my_first_simulation</code><span>而不是建議的</span><code>my_project</code><span>。</span></li>
<li><span>將世界文件命名</span><code>my_first_simulation.wbt</code><span>為建議的</span><code>empty.wbt</code><span>。</span></li>
<li><span>點擊所有複選框，包括預設未勾選的“新增矩形競技場”。</span></li>
</ol>
</blockquote>
<p><span>Webots 顯示它剛剛建立的目錄和檔案的清單。這對應於</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-standard-file-hierarchy-of-a-project"><span>Webots 專案的標準文件層次結構</span></a><span>。按一下</span><code>Finish</code><span>（Windows、Linux）或</span><code>Done</code><span>（macOS）按鈕關閉此視窗。</span></p>
<p><span>恭喜，您剛剛創建了您的第一個 Webots 世界！ 3D 視圖應顯示一個帶有方格地板的方形競技場。您可以</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-3d-window#navigation-in-the-scene"><span>使用滑鼠</span></a><span>在 3D 視圖中移動視點：左鍵、右鍵和滾輪。</span></p>
<p><span></span><strong><span>儲存在世界文件中的 Webot 節點以稱為場景樹的</span></strong><span>樹狀結構進行組織。場景樹可以在主視窗的兩個子視窗中查看：</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-3d-window"><span>3D 視圖</span></a><span>（位於主視窗的中心）是場景樹的 3D 表示，</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-scene-tree"><span>場景樹視圖</span></a><span>（左側）是場景樹的層次表示。場景</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-scene-tree"><span>樹視圖</span></a><span>是可以修改節點和欄位的地方。它目前應該列出以下節點：</span></p>
<ul>
<li><a href="https://cyberbotics.com/doc/reference/worldinfo"><span>WorldInfo</span></a><span>：包含模擬的全域參數。</span></li>
<li><a href="https://cyberbotics.com/doc/reference/viewpoint"><span>視點</span></a><span>：定義主視點相機參數。</span></li>
<li><a href="https://webots.cloud/run?url=https://github.com/cyberbotics/webots/blob/released/projects/objects/backgrounds/protos/TexturedBackground.proto" target="_blank"><span>TexturedBackground</span></a><span>：定義場景的背景（如果稍微旋轉視點，你應該會看到遠處的山脈）</span></li>
<li><a href="https://webots.cloud/run?url=https://github.com/cyberbotics/webots/blob/released/projects/objects/backgrounds/protos/TexturedBackgroundLight.proto" target="_blank"><span>TexturedBackgroundLight</span></a><span>：定義與上述背景相關的光。</span></li>
<li><a href="https://webots.cloud/run?url=https://github.com/cyberbotics/webots/blob/released/projects/objects/floors/protos/RectangleArena.proto" target="_blank"><span>RectangleArena</span></a><span>：定義您在該場景中迄今為止看到的唯一物件。</span></li>
</ul>
<p><span>每個節點都有一些可自訂的屬性，稱為</span><strong><span>字段</span></strong><span>。讓我們修改這些欄位來改變矩形區域：</span></p>
<p><span>每個節點都可以帶有自己設定的屬性，稱為欄位。</span></p>
<blockquote>
<p><strong><span>動手操作#3</span></strong><span>：雙擊</span><code>RectangleArena</code><span>場景樹中的節點。這應該打開節點並顯示其字段。 (雙點擊各節點可以帶出其特定的欄位)</span></p>
<ol>
<li><span>選擇該</span><code>floorTileSize</code><span>欄位並將其值設為</span><code>0.25 0.25</code><span>而不是</span><code>0.5 0.5</code><span>。您應該立即在 3D 視圖中看到效果。</span></li>
<li><span>選擇該</span><code>wallHeight</code><span>欄位並將其值變更為 而</span><code>0.05</code><span>不是</span><code>0.1</code><span>。競技場的牆壁現在應該更低了。</span></li>
</ol>
</blockquote>
<p><span>在</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-scene-tree"><span>場景樹視圖</span></a><span>中，如果欄位與預設值不同，則顯示為不同的顏色（取決於主題）。現在，我們想新增一些物件：</span></p>
<p><span>當欄位值與內定值不同時，將以不同的顏色進行標註。</span></p>
<p><span>按shift+鼠標左鍵，可以移動物品。</span></p>
<p><span>選擇物體後，可以用Ctrl+C複製該物體，然後用Ctrl+V貼上該複製的物體，然後再用Ctrl+鼠標左鍵移動物體。</span></p>
<p><span>物體出現後，出現位於物體中心點的座標指示與旋轉指示，可以用鼠標點選後可以利用指示進行單一方向的移動選擇或利用旋轉指示旋轉物體。</span></p>
<blockquote>
<p><strong><span>動手操作#4</span></strong><span>：雙擊</span><code>RectangleArena</code><span>場景樹中的以將其關閉並選擇它。點擊場景樹頂部的</span><code>Add</code><span>按鈕。</span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/add-button.png" width="26"/><span>在開啟的對話方塊中選擇</span><code>PROTO nodes (Webots Projects) / objects / factory / containers / WoodenBox (Solid)</code><span>。競技場中央應該會出現一個大箱子。在場景樹中雙擊它以打開其字段。</span></p>
<ol>
<li><span>將其改為</span><code>size</code><span>而</span><code>0.1 0.1 0.1</code><span>不是</span><code>0.6 0.6 0.6</code><span>。</span></li>
<li><span>將其改為</span><code>translation</code><span>而</span><code>0 0 0.05</code><span>不是</span><code>0 0 0.3</code><span>。或者，您可以使用 3D 視圖中出現的藍色箭頭來調整其</span><code>translation.z</code><span>場。</span></li>
<li><span>現在按住 Shift 鍵並點擊 3D 視圖中的方塊並將其移至競技場的某個角落。</span></li>
<li><span>選擇該框並按</span><kbd>ctrl</kbd><span>-<span> </span></span><kbd>C</kbd><span>、</span><kbd>ctrl</kbd><span>-<span> </span></span><kbd>V</kbd><span>（Windows、Linux）或</span><kbd>⌘ command</kbd><span>-<span> </span></span><kbd>C</kbd><span>、</span><kbd>⌘ command</kbd><span>-<span> </span></span><kbd>V</kbd><span>（macOS）進行複製和貼上。按住 Shift 鍵並按一下並拖曳新方塊以將其移至其他位置。用這種方式建立第三個框。</span></li>
<li><span>移動箱子，使沒有箱子位於競技場的中心。您也可以使用藍色旋轉箭頭沿著垂直軸旋轉框。也可以按住 Shift 鍵並按滑鼠右鍵拖曳來完成此操作。或者，您可以變更場景樹中節點</span><code>rotation</code><span>的場的角度。</span><code>WoodenBox</code><span></span></li>
<li><span>一旦您對結果滿意，請使用儲存按鈕儲存世界。</span></li>
</ol>
</blockquote>
<p><span></span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-3d-window#axis-aligned-handles"><span>本節</span></a><span>介紹如何使用平移和旋轉手柄來移動物體。</span></p>
<h4 class="anchor-header" id="addanepuckrobot" name="add-an-e-puck-robot"><a class="anchor-link" href="https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots?tab-language=python#add-an-e-puck-robot"><span class="anchor-link-image"></span></a><span>添加電子冰球機器人</span></h4>
<p><span>e-puck 是一個小型機器人，具有差速輪、10 個</span><a href="https://cyberbotics.com/doc/reference/led"><span>LED</span></a><span>和多個感測器，包括 8 個</span><a href="https://cyberbotics.com/doc/reference/distancesensor"><span>距離感測器</span></a><span>和一個</span><a href="https://cyberbotics.com/doc/reference/camera"><span>攝影機</span></a><span>。在本教程中，我們只對使用它的輪子感興趣。我們將在接下來的教學中學習如何使用其他功能。</span></p>
<p><span>現在，我們將為世界添加一個電子冰球模型。確保模擬已暫停，並且虛擬時間已用時間為 0。如果不是，請使用</span><code>Reset</code><span>按鈕重設模擬</span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/reset-simulation-button.png" width="26"/><span>。</span></p>
<p><span>當修改 Webots 世界並打算保存時，首先要暫停模擬並重新載入到其初始狀態，即主工具列上的虛擬時間計數器應顯示 0:00:00:000。否則，每次儲存時，每個 3D 物件的位置都會累積錯誤。因此，對世界的任何修改都應按以下順序執行：</span><strong><span>暫停、重置、修改和保存模擬</span></strong><span>。</span></p>
<p><span>我們不需要從頭開始創建電子冰球機器人，我們只需要導入一個</span><code>E-puck</code><span>節點。這個節點其實就是</span><a href="https://cyberbotics.com/doc/reference/proto"><span>PROTO</span></a><span>節點，就像我們之前介紹的</span><code>RectangleArena</code><span>或一樣</span><code>WoodenBox</code><span>。原型設計可讓您建立自訂物件並重複使用它們。</span></p>
<blockquote>
<p><strong><span>動手操作#5</span></strong><span></span><code>WoodenBox</code><span><span> </span>：選擇場景樹視圖的最後一個節點。按一下場景樹視圖頂部的</span><code>Add</code><span>按鈕。</span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/add-button.png" width="26"/><span>在對話框中選擇</span><code>PROTO nodes (Webots Projects) / robots / gctronic / e-puck / E-puck (Robot)</code><span>。電子冰上曲棍球機器人應該會出現在競技場的中央。移動並旋轉這個機器人，就像移動和旋轉盒子一樣。儲存模擬並按下</span><code>Run real-time</code><span>按鈕</span><img alt="" height="26" src="https://raw.githubusercontent.com/cyberbotics/webots/released/docs/guide/images/realtime-button.png" width="26"/><span>。</span></p>
</blockquote>
<p><span>機器人應該移動、LED 閃爍並避開障礙物。這是因為它有一個具有該行為的預設控制器。您可能已經注意到 3D 視圖左上角出現了一個小黑視窗。它顯示了電子冰球機器人的</span><a href="https://cyberbotics.com/doc/reference/camera"><span>攝影機</span></a><span>拍攝的影像。該影像將保持黑色，直到機器人控制器明確啟用攝影機。可以透過拖曳來</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-3d-window#moving-and-resizing-overlays"><span>移動</span></a><span>這個小圖像視窗。也可以拖曳右下角來</span><a class="dynamicLoad" href="https://cyberbotics.com/doc/guide/the-3d-window#moving-and-resizing-overlays"><span>調整大小</span></a><span>。最後，點擊右上角的「x」即可關閉。您可以透過在</span><strong><span>「覆蓋」選單中的</span></strong><span></span><strong><span>「相機裝置</span></strong><span>」子選單中選擇它，使其再次可見。因為我們不需要它，所以您實際上可以關閉它。</span></p>
<p><span>影片</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HtQtDEhnbhQ" width="560"></iframe></span></p>
<p><strong data-end="1633" data-start="1627"></strong></p>
<h2>w6</h2>
<p><span>如何啟動webots：在本學期可攜程式的start.bat中，已經有在可攜上啟動的程式，只需確認</span><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a><span> 是否壓縮放入可攜套件(</span><span><a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a></span><span>)的 data 目錄中，如是使用舊版的可攜套件，也可在.bat啟動編碼中自行設定加入：</span></p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">REM for Webots
set PYTHON_PATH=%Disk%:\Python313
  
REM for webots
set  path_webots=%Disk%:\Webots_2025a\msys64\mingw64\bin;%Disk%:\Webots_2025a\msys64\usr\bin
  
path=%Disk%:;%path_python%;%path_git%;%path_copsim%;%path_msys2%;%path_miketex%;%path_flutter%;%path_node%;%path_tcc%;%path_postgresql%;%path_range%;%path_lua%;%path_core%;%path_putty%;%path_vscode%;%RUST_PATH%;%path_erlang%;%path_nodejs%;%path_haskell%;%path_scite%;%path_xsltproc%;%path_gnuplot%;%path_openssl%;%path_poppler%;%path_webots%;%path_blender%;%path%;
</pre>
<p></p>
<h2>w7</h2>
<p>投石機</p>
<p><img alt="" height="391" src="/images/螢幕擷取畫面 2025-04-17 221923.png" width="397"/></p>
<p>slvs:<a href="/downloads/w7slvs.7z">/downloads/w7slvs.7z</a></p>
<p>stl:<a href="/downloads/w7stl.7z">/downloads/w7stl.7z</a></p>
<p>繪圖影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/rPlhClDPnU0" width="560"></iframe></p>
<p>組裝影片:</p>
<p></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/zt_Bu5a_kEM" width="560"></iframe></p>
<h2>w8</h2>
<p>根據<span> </span><a href="https://cyberbotics.com/doc/reference/solidreference">SolidReference</a><span> </span>節點的用法說明, SolidReference 可以用在 Joint 節點的 endPoint 欄位中，用來指向一個現有的 Solid 或靜態環境 &lt;static environment&gt;。通過這種方式，可以閉合機械迴圈。</p>
<p>當指向一個 Solid 時，唯一的限制是 Solid 和 Joint 必須是某個共同上層 Solid 的後代。</p>
<p>意思即, SolidReference 是一個引用類型，允許在 Joint 節點的 endPoint 欄位中指定某個目標。它可以指向兩種類型的對象：</p>
<ol>
<li>現有的 Solid：這是一個具體的實體（例如某個機械零件或組件），但這個 Solid 和 Joint 必須是某個共同上層 Solid 的後代。</li>
<li>靜態環境 &lt;static environment&gt;：這通常指的是不動的參考框架（例如地面或固定基座）。</li>
</ol>
<p>根據第一個情況，若將 fourbar linkage 的 joint4 設置在 base link 的最右端，然後將 joint4 的 endPoint 欄位，設為 SolidReference 指向 link3，即可符合 Soild (link3) 與 Joint (joint4) 都是某個共同上層 Solid (base) 的後代。</p>
<p>至於第二個情況，則可以將 fourbar linkage 的 joint4 設置在 link3 的末端，然後將 joint4 的 endPoint 欄位指向 &lt;static environment&gt;，讓 link3 的末端固定在 ground (其作用與固定在 base 節點相同)。</p>
<h2>w9</h2>
<p>1.期中自評</p>
<p><a href="https://mdecd2025.github.io/hw-Spirit0224/content/Midterm.html">此連結</a>為Midterm的自評網頁</p>
<p>評分依據:</p>
<p>推次數:每周1次~2次<br/>作業網站:目前有跟上進度，但是對於Webots的四連桿還是不熟悉，但是機器人有完成<br/>零件繪圖+組裝:投籃機跟四連桿皆完成<br/>可攜近端:有拍影片並且更新到最新版本<br/>只覺得自己對於Webots還不熟悉，所以有點扣分</p>
<p>(自評成績:70)</p>
<p>2.四連桿</p>
<p><a href="https://mdecd2025.github.io/hw-Spirit0224/content/HW1.html">此連結</a>為四連桿HW1網頁</p>
<p>要求利用Webots內建零件做出四連桿</p>
<p>要有條件約束及子母零件配置最後輸入程式碼達成驅動</p>
<p>3.計分板</p>
<p>webots配合計數器(七段顯示器)、webots版本問題，最後投籃機重點交代</p>
<h2>w10</h2>
<p>截至目前已知：</p>
<p>最新的可攜程式系統與套件版本</p>
<p>已知如何自行建立各種版本的 Python 可攜系統</p>
<p>已知哪一個版本 SciTE 較為穩定</p>
<p>已知如何使用 Codespaces 管理個人與協同分組的倉儲</p>
<p>已知可以透過 token 或 Github session 管理管理個人與協同分組的倉儲</p>
<p>已知哪一個版本的 Webots 較為穩定</p>
<p>已知如何更新個人與協同分組的倉儲, 以便套用所分配的<span> </span><a href="https://mde.tw/cd2025/content/IPv6.html">IPv6 位址</a>啟動網際協同流程</p>
<p>已知投籃機的零組件可以透過 Solvespace 與 Onshape 繪製，其中前者簡便而後者有利於協同</p>
<p>已知如何利用 Solid - Shape - Box 或 Solid - CadShape 建立封閉式多連桿機構模擬，(若希望直接更改零組件顏色， 則可以使用 Solid - Shape - Mesh 進行多連桿機構進行組立</p>
<p>已知可以透過 Solid - Shape - Mesh 中 material 的名稱，以控制器程式改變顏色，進而製作出七段顯示模擬器</p>
<h2>w11</h2>
<p><span>webots 小組協同模擬及 fourbar_box複習</span></p>
<h2>w12</h2>
<p>做HW1~3並上傳至回應表</p>
<p>接著往下做EXAM1~3</p>
<h2>w13</h2>
<p>做EXAM1~3並回報到回應表</p>
<h2>w14</h2>
<p>端午節放假</p>
<p>*自行在家裡推兩次</p>
<p>*複習四連桿</p>
<p>*理解籃框運作</p>
<p>*繼續完成Final</p>
<h2>w15</h2>
<p>抽查第一次</p>
<p>1.開啟自己的ipv6可攜</p>
<p>2.開啟HW1確認是否有完成</p>
<p></p>
<h2>w16</h2>
<p>這周抽查Webots以及上台報告</p>
<p>(1)</p>
<p>上台報說明HW1如何製作</p>
<p>連結:<a href="https://mdecd2025.github.io/hw-Spirit0224/content/HW1.html">HW1-41223122</a></p>
<hr/>
<p>(2)</p>
<p>1.修改HW1-link1尺寸</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/mV9VwkTgprQ" width="560"></iframe></p>
<p>檔案:<a href="/downloads/41223122_HW1 - w16.7z">/downloads/41223122_HW1 - w16.7z</a></p>
<p>修改Link1改成20公分，利用Solvespace繪製然後確定角度</p>
<hr/>
<p>2.<span>修改HW2-link1尺寸</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/H4gRT8xpVes" width="560"></iframe></span></p>
<p><span>檔案:<a href="/downloads/41223122_HW2 - w16.7z">/downloads/41223122_HW2 - w16.7z</a></span></p>
<p><span>開啟Solvespace修改Link1改成20公分，存檔stl,obj。開啟組合檔並取代零件，開啟py檔然後取代stl組合檔，從新掃描檔案，開啟Webots修改節點</span></p>
<p><span>心得:這次的抽查跟考試很類似，幫助我複習一次如何修改檔案以及轉換檔案。所以又讓我對Solvespace及Webots更熟悉</span></p>
<h2>w17</h2>
<p>上台開啟自己的作業網站並口述做了什麼籍老師提問題</p>
<p></p><h1>task</h1>
<p>記錄每周額內容</p>
<h2>task1</h2>
<p>Python 更新</p>
<p>Python版本過舊要進行升級</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/ys-K4rsSOB8?si=tmqypcbmqfn0qLGp" title="YouTube video player" width="560"></iframe></p>
<h2>task2</h2>
<p>ssh</p>
<p>1.利用puttygen.exe建立金鑰，複製ssh-ra到Github，之後到按Load存入Y槽</p>
<p><img alt="" height="285" src="/images/螢幕擷取畫面 2025-03-21 135959.png" width="367"/></p>
<p>2.</p>
<p><img alt="" height="434" src="/images/螢幕擷取畫面 2025-03-21 140448.png" width="451"/></p>
<p><img alt="" height="436" src="/images/螢幕擷取畫面 2025-03-21 140501.png" width="449"/></p>
<p><img alt="" height="436" src="/images/螢幕擷取畫面 2025-03-21 140454.png" width="449"/></p>
<p>操作影片:</p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" referrerpolicy="strict-origin-when-cross-origin" src="https://www.youtube.com/embed/9q08eoJuA4k?si=Sg-JxWMzf87cnc9V" title="YouTube video player" width="560"></iframe></p>
<h2>task3</h2>
<h4>使用 Solvespace 建立平面四連桿系統零組件</h4>
<p>slvs:<a href="/downloads/slvs.7z">/downloads/slvs.7z</a></p>
<p>stl:<a href="/downloads/stl.7z">/downloads/stl.7z</a></p>
<p>繪製影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fquSBAHiX0g" width="560"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ImxVm3vgpiA" width="560"></iframe></p>
<p>組裝影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/MR1uKyb-428" width="560"></iframe></p>
<h2>task4</h2>
<p>列出本班為分組人員</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false"># 甲班學員資料處理
url = "https://mde.tw/list/2a.txt"
data = open(url).readlines()
all_stud = data[1:]
a_all_members = ['41223154', '41271125', '41271158', '41271146', '41271131', 'CYG41223103', '41223102', '41023128', '41023137', '41223137', '41223157', '41223156', 'otakuyoyo', '41223141', '41223113', 'kim41223114', 'joeisme1208', '41223116', '41223144', '41223140', '41223143', '41223138', '41223134', '41223136', 'zhe41223118', 'Spirit0224', 'yuhao-08', '41223158', 'Ren911308', '41223150', 'Manto8', 'CYA41223106', 'yan21ed', 'Lin41223107', '41223133', 'hong41223129', '41223110', '41223147', 'Linjiahong41223125', 'CHN41223132', 'Yu-Fang-Hong', '41023111', 'yckaooooo', 'kolas911205', '41023105', '40932134', '41223104', 'yan41223101', '41223105', '41223153', '41223120', '41223152', 'G8People', 'WSE41223112', '41223146', '41223119']
  
# 顯示甲班標題
print("甲班:")
for i in all_stud:
    drop_n = i.rstrip("\n")
    stud = drop_n.split("\t")
    stud_num = stud[0]
    stud_github = stud[1]
    if stud_github not in a_all_members:
        print(stud_num)</pre>
<p><a href="https://mdecd2025.github.io/2a-ag4/content/Brython.html?src=https://gist.githubusercontent.com/zhe41223118/fcdf65c3206155c5cd56140e47c6c87d/raw/8a5262e66228212fbc4f862ceaf67c798c9fb54c/2a-1">2a未加入團隊學員</a></p>
<h2>task5</h2>
<p>2.請整理<span> </span><a href="https://cyberbotics.com/doc/guide/introduction-to-webots">https://cyberbotics.com/doc/guide/introduction-to-webots</a><span> </span>中重要的英文單字與用法, 並且針對其中所使用的英文文法逐句說明.</p>
<ol data-end="1116" data-start="38">
<li data-end="175" data-start="38">
<p data-end="77" data-start="41"><strong data-end="68" data-start="41">Mobile robot simulation</strong>（移動機器人模擬）</p>
<strong data-end="89" data-start="83">差異</strong>：英文中的「simulation」指的是在虛擬環境中模擬機器人行為，而中文「模擬」同樣表示模仿，但在某些語境下，可能沒有英文「simulation」那麼強烈的虛擬環境暗示。</li>
<li data-end="282" data-start="177">
<p data-end="209" data-start="180"><strong data-end="201" data-start="180">Rapid prototyping</strong>（快速原型設計）</p>
<strong data-end="221" data-start="215">差異</strong>：英文「prototyping」具體指「製作原型」這個過程，而中文「原型設計」更偏向結果導向，較少強調「製作過程」的含義。</li>
<li data-end="396" data-start="284">
<p data-end="315" data-start="287"><strong data-end="309" data-start="287">Physics properties</strong>（物理屬性）</p>
<strong data-end="327" data-start="321">差異</strong>：英文「properties」除了「屬性」，也可以指物理環境中的具體特徵和參數，而中文的「屬性」更多強調事物的性質，而不一定包含具體數值。</li>
<li data-end="542" data-start="398">
<p data-end="429" data-start="401"><strong data-end="423" data-start="401">Locomotion schemes</strong>（移動方式）</p>
<strong data-end="441" data-start="435">差異</strong>：英文「locomotion」特指機器人或動物的移動方式，包括步行、飛行等具體方式；而中文「移動」泛指動作，涵蓋範圍更廣泛。英文「schemes」強調設計、計劃的結構，但中文「方式」沒有強烈的規劃意味。</li>
<li data-end="637" data-start="544">
<p data-end="575" data-start="547"><strong data-end="569" data-start="547">Controller program</strong>（控制程式）</p>
<strong data-end="587" data-start="581">差異</strong>：英文「controller」強調設備或程式的控制功能，而中文「控制」可能更多指行為，而非具體裝置。</li>
<li data-end="740" data-start="639">
<p data-end="665" data-start="642"><strong data-end="658" data-start="642">Robot models</strong>（機器人模型）</p>
<strong data-end="677" data-start="671">差異</strong>：英文「model」不僅指模型，還可以包含系統設計的概念，而中文「模型」更偏向於外形或結構，缺乏英文中「概念模型」的深層意義。</li>
<li data-end="848" data-start="742">
<p data-end="773" data-start="745"><strong data-end="767" data-start="745">Swarm intelligence</strong>（群體智能）</p>
<strong data-end="785" data-start="779">差異</strong>：英文「swarm」特指動物或機器人的群體行動，並且有合作與集體行為的含義，而中文「群體」也可指單純的個體聚集，未必強調合作。</li>
<li data-end="961" data-start="850">
<p data-end="880" data-start="853"><strong data-end="874" data-start="853">Genetic algorithm</strong>（遺傳算法）</p>
<strong data-end="892" data-start="886">差異</strong>：英文「genetic」在此術語中引用遺傳學理論，而中文「遺傳」通常與生物學相關，在技術環境下可能需要具體說明該算法如何模仿生物遺傳過程。</li>
<li data-end="1072" data-start="963">
<p data-end="991" data-start="966"><strong data-end="985" data-start="966">Neural networks</strong>（神經網絡）</p>
<strong data-end="1003" data-start="997">差異</strong>：英文中的「neural」源於生物神經系統，並引申至機器學習模型，而中文「神經」更多指生物概念，除非在明確的技術背景下才會引申至計算領域。</li>
<li data-end="1116" data-start="1074">
<p data-end="1116" data-start="1078"><strong data-end="1110" data-start="1078">Artificial intelligence (AI)</strong>（人工智能）</p>
<strong data-end="1128" data-start="1122">差異</strong>：英文「artificial intelligence」是技術術語，指模擬人類智能的系統，中文「人工智能」直接翻譯，但中文的「人工」有時強調「人為」製造，可能略有不同的語感。</li>
</ol>
<ol data-end="1255" data-start="1217" start="11">
<li data-end="1255" data-start="1217"><strong data-end="1246" data-start="1221">Supervisor controller</strong>（監督者控制程式）<strong data-end="1267" data-start="1261">差異</strong>：英文「supervisor」在此指具有高級管理功能的控制器，而中文「監督者」更多強調「人」的角色，控制程式翻譯時可能會弱化其技術層面的管理權限含義。</li>
</ol>
<ol data-end="1380" data-start="1344" start="12">
<li data-end="1380" data-start="1344"><strong data-end="1372" data-start="1348">Multi-agent research</strong>（多智能體研究）<strong data-end="1392" data-start="1386">差異</strong>：英文「agent」具備自主行為或決策功能，中文「智能體」強調的是智能或行動個體，但「體」的翻譯可能較模糊，沒有完全涵蓋英文中「agent」的主動性和自決性。</li>
</ol>
<ol data-end="1505" data-start="1473" start="13">
<li data-end="1505" data-start="1473"><strong data-end="1499" data-start="1477">Simulation control</strong>（模擬控制）<strong data-end="1517" data-start="1511">差異</strong>：英文「simulation」強調在虛擬或模擬環境中的控制，而中文「模擬控制」雖然意義相同，但「模擬」一詞在某些語境下會與「模仿」混淆。</li>
</ol>
<ol data-end="1621" data-start="1587" start="14">
<li data-end="1621" data-start="1587"><strong data-end="1612" data-start="1591">3D virtual worlds</strong>（3D 虛擬世界）<strong data-end="1633" data-start="1627">差異</strong>：英文「virtual worlds」通常指的是由電腦生成的虛擬環境，而中文「虛擬世界」在非技術環境中也可能指非現實的想像世界，因此技術語境中需要強調其數位屬性。</li>
</ol>
<h2>task6</h2>
<h4>Webots Tutorial (HW3)</h4>
<p>1. 啟動 Webots 串流模式：</p>
<p>   使用以下指令開啟 Webots 並啟用串流伺服器：</p>
<div>
<div class="syntaxhighlighter py" id="highlighter_781547">
<table border="0" cellpadding="0" cellspacing="0">
<tbody>
<tr>
<td class="gutter">
<div class="line number1 index0 alt2">1</div>
</td>
<td class="code">
<div class="container">
<div class="line number1 index0 alt2"><code class="py plain">webotsw </code><code class="py keyword">-</code><code class="py keyword">-</code><code class="py plain">stream</code></div>
</div>
</td>
</tr>
</tbody>
</table>
</div>
</div>
<p>2.   <strong data-end="163" data-start="154">預設埠號：</strong><span> </span><code data-end="170" data-start="164">1234</code><br data-end="173" data-start="170"/>     使用瀏覽器連線至：</p>
<p></p>
<ul>
<li class="" data-end="222" data-start="191">
<p class="" data-end="222" data-start="193">本地端：<code data-end="220" data-start="197">http://localhost:1234</code></p>
</li>
<li class="" data-end="263" data-start="226">
<p class="" data-end="263" data-start="228">遠端機器：<code data-end="263" data-start="233">http://stream_server_ip:1234</code></p>
</li>
</ul>
<p><code data-end="263" data-start="233">3. <strong data-end="278" data-start="268">建議瀏覽器：</strong><br data-end="281" data-start="278"/><strong data-end="306" data-start="284">    Windows 環境下使用 Edge</strong>，相容性較佳（支援 WebGL2）</code></p>
<p><code data-end="263" data-start="233">4. </code>顯示投籃成績（Scoreboard / 計時器）</p>
<h4 class="" data-end="374" data-start="364"> a. 近端檢視：</h4>
<ul data-end="442" data-start="375">
<li class="" data-end="404" data-start="375">
<p class="" data-end="404" data-start="377">利用 Webots<span> </span><code data-end="396" data-start="387">display</code><span> </span>元件展示數字。</p>
</li>
<li class="" data-end="442" data-start="405">
<p class="" data-end="442" data-start="407"><strong data-end="414" data-start="407">限制：</strong><span> </span>僅在本機 Webots 視窗中可見，無法透過串流顯示。</p>
</li>
</ul>
<h4 class="" data-end="464" data-start="444"> b. 串流顯示（7 段顯示器實作）：</h4>
<ol data-end="795" data-start="465">
<li class="" data-end="528" data-start="465">
<p class="" data-end="528" data-start="468"><strong data-end="477" data-start="468">建模工具：</strong><span> </span>使用 Solvespace 繪製的 7 段顯示器模型（檔案：<code data-end="526" data-start="508">score_counter.7z</code>）。</p>
</li>
<li class="" data-end="625" data-start="530">
<p class="" data-end="542" data-start="533"><strong data-end="542" data-start="533">匯入模型：</strong></p>
<ul data-end="625" data-start="546">
<li class="" data-end="590" data-start="546">
<p class="" data-end="590" data-start="548">在 Webots 中插入一個<span> </span><code data-end="570" data-start="563">Solid</code><span> </span>→<span> </span><code data-end="580" data-start="573">Shape</code><span> </span>→<span> </span><code data-end="589" data-start="583">Mesh</code>。</p>
</li>
<li class="" data-end="625" data-start="594">
<p class="" data-end="625" data-start="596"><code data-end="601" data-start="596">url</code><span> </span>指向各段（a ~ g）的<span> </span><code data-end="621" data-start="615">.obj</code><span> </span>檔案。</p>
</li>
</ul>
</li>
<li class="" data-end="728" data-start="627">
<p class="" data-end="641" data-start="630"><strong data-end="641" data-start="630">變色顯示數字：</strong></p>
<ul data-end="728" data-start="645">
<li class="" data-end="697" data-start="645">
<p class="" data-end="697" data-start="647">使用<span> </span><strong data-end="667" data-start="650">controller 程式</strong><span> </span>來變更 Mesh 段的顏色（開：紅色／亮；關：灰色／暗）。</p>
</li>
<li class="" data-end="728" data-start="701">
<p class="" data-end="728" data-start="703">每個數字由不同段（a-g）組成，模擬數字顯示效果。</p>
</li>
</ul>
</li>
<li class="" data-end="795" data-start="730">
<p class="" data-end="754" data-start="733"><strong data-end="754" data-start="733">使用 Supervisor 模式：</strong></p>
<ul data-end="795" data-start="758">
<li class="" data-end="795" data-start="758">
<p class="" data-end="795" data-start="760">可程式化操控每個 Mesh 的外觀（顏色控制、數字變換、倒數計時等）。</p>
</li>
</ul>
</li>
</ol>
<p>檔案:<a href="/downloads/task6.7z">/downloads/task6.7z</a></p>
<p>影片:<iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kFaTmV3U7VU" width="560"></iframe></p>
<h1>Homework</h1>
<p>作業 (30%)</p>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">part1:</p>
<p style="padding-left: 60px;">請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置:</p>
<p style="padding-left: 90px;">下載 <a href="http://229.cycu.org/portable_wcm2025.7z">portable_wcm2025.7z</a> (330MB, 解開壓縮後 1.4GB)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a.7z">Webots_2025a.7z</a> (1.5 GB, 解開後約為 2.9GB, 可單獨運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Webots_2025a_web.7z">Webots_2025a_web.7z</a> (171 MB, 解開壓縮後約為 1GB, 必須連網運作)</p>
<p style="padding-left: 90px;"><a href="http://229.cycu.org/Blender4.2.7z">Blender4.2.7z</a></p>
<p style="padding-left: 30px;">part2:</p>
<p style="padding-left: 60px;">請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 60px;">base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec.</p>
<p style="padding-left: 30px;">part3:</p>
<p style="padding-left: 60px;">模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/cd2025_hw1_demo.7z">cd2025_hw1_demo.7z</a></p>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p style="padding-left: 30px;">各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p style="padding-left: 60px;"><a href="/downloads/fourbar_slvs.7z">fourbar_slvs.7z</a></p>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p style="padding-left: 30px;">請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 (<a href="https://www.youtube.com/watch?v=LloG_Jn_TI0&amp;t=51s">參考影片</a>)後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統.</p>
<p style="padding-left: 30px;">參考資料:</p>
<p>參考資料:</p>
<p style="padding-left: 30px;"><a href="/downloads/fourbar_ball_throwing_linkage.slvs">fourbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><a href="/downloads/sixbar_ball_throwing_linkage.slvs">sixbar_ball_throwing_linkage.slvs</a></p>
<p style="padding-left: 30px;"><img alt="" height="264" src="/images/fourbar_ball_throwing_linkage.gif" width="400"/></p>
<h2>HW1</h2>
<p>HW1 (5%): <span style="background-color: #ffff00;">建立由 Box 組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號</p>
<p>檔案:<a href="/downloads/41223122-fourbar_box.7z">/downloads/41223122-fourbar_box.7z</a></p>
<p>觀念:此作法與老師有不同，本影片是以順時針的觀念一階一階下去組裝</p>
<p>注意:需要注意的是誰要參考誰以免亂掉</p>
<p>影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/kZ73V1reT7I" width="560"></iframe></p>
<h2>HW2</h2>
<p>HW2 (5%): <span style="background-color: #ffff00;">建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號</p>
<p>零件檔:<a href="/downloads/41223122_HW2.7z">/downloads/41223122_HW2.7z</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/lH_cql64sF0" width="560"></iframe></p>
<p>*此影片未完成結果，最後作動並未達成</p>
<p>*排解問題原因於程式碼檔案名稱打錯導致軟體讀取不到</p>
<p>以下是最後作動影片</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/NxeV2Z-qR3w" width="560"></iframe></p>
<h2>HW3</h2>
<p>HW3 (20%):<span style="background-color: #ffff00;">建立 Webots 桌上籃球遊戲機模擬系統</span></p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號</p>
<p>檔案:<a href="/downloads/41223122_HW3.7z">/downloads/41223122_HW3.7z</a>(Car未完成)</p>
<hr/>
<p>basketball:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/HT00nKhvMzs" width="560"></iframe></p>
<p>*運用切割程式來切割投籃機的零件</p>
<p>*用Solvespace來確認該位置的正確</p>
<p></p>
<p><img alt="" height="447" src="/images/螢幕擷取畫面 2025-05-15 181604.png" width="561"/></p>
<p>Car:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/cWGpBiR-PaQ" width="560"></iframe></p>
<p>*利用內部的零件來製作車子</p>
<h1>Midterm</h1>
<p>本課程所繳交的期中成績為學員自評之學習期望成績.</p>
<p>期中考週的自評期望成績繳交流程:</p>
<ol>
<li>整理先前所完成的各週的進度、作業網頁內容以及心得</li>
<li>拍攝期中自評影片, 上傳至 Youtube 後, 以"<span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號</span>"為影片標題後嵌入本頁面中</li>
<li>回填期中自評表單</li>
<li>上傳學員期中成績</li>
</ol>
<p>各週進度:<a href="https://mdecd2025.github.io/hw-Spirit0224/content/w1.html">第一周</a>開始記錄</p>
<p>各週網頁內容:</p>
<p>Week:1~4周處理可攜及近端還有金鑰及ipv6設定</p>
<p>Week:5~8周繪圖+組裝投石機和四連桿，使用Webots做場景及機器人</p>
<p>task:紀錄上課有時候老師額外講的內容</p>
<p>期中心得:</p>
<p>這學期開始學習新的軟體(Webots)，對於這個軟體仍然有很多不懂地方。期中過後要嘗試去理解這套軟體應用。這學期我對於比較熟悉部分次金鑰，有老師親自過來教導，讓我知道連動的重要性，還有密碼網站設定連結，只要錯一個就無法開啟。還讓我學到麼去找錯誤，一一去排除。</p>
<p>這學期也要利用Solvespace繪圖跟組裝，我對於這套軟體還是一樣熟悉，手法沒有生鏽。期末之前又可以學到新的一套繪圖軟體(onshape)，又讓我們更增進自己的能力，多學習軟體的應用。</p>
<p></p>
<p>評分依據:</p>
<p>推次數:每周1次~2次<br/>作業網站:目前有跟上進度，但是對於Webots的四連桿還是不熟悉，但是機器人有完成<br/>零件繪圖+組裝:投籃機跟四連桿皆完成<br/>可攜近端:有拍影片並且更新到最新版本<br/>只覺得自己對於Webots還不熟悉，所以有點扣分</p>
<p>(自評成績:70)</p>
<p>期中自評影片:</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/ZD4Hbb_jlQU" width="560"></iframe></p>
<p></p>
<p style="padding-left: 30px;"></p>
<h1>Exam</h1>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p style="padding-left: 30px;">各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景 </p>
<p style="padding-left: 30px;">各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制.</p>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p style="padding-left: 30px;">各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站.</p>
<p style="padding-left: 30px;">協同分組方式:</p>
<ol>
<li>分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁.</li>
<li>分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁.</li>
</ol>
<h2>Exam1</h2>
<p>Exam1 (10%): 建立 Webots 基本物件模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號</p>
<p>零件檔:<a href="/downloads/41223122_EXAM1.7z">/downloads/41223122_EXAM1.7z</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/01BU79_obRY" width="560"></iframe></p>
<p>*HW1零件2增加凸出來桿件</p>
<p>*調整link1~3的高度</p>
<p>*計算勁度(22*3.14/180)要用自己學號</p>
<p>*依序算出勁度+微調</p>
<p>*程式碼不用改照按</p>
<p><img alt="" height="370" src="/images/角度勁度.png" width="556"/></p>
<p></p>
<h2>Exam2</h2>
<p>Exam2 (10%): 利用 CAD 零組件建立模擬場景</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號</p>
<p>零件檔:<a href="/downloads/41223122_EXAM2.7z">/downloads/41223122_EXAM2.7z</a></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/X0LjnRBViCA" width="560"></iframe></p>
<p>*要把零件Link1給改尺寸(1+0.學號後兩碼m)</p>
<p>*要注意Solvespcae的單位是否與老師設定尺寸相同，如果是cm及mm要退位</p>
<p>*把角度設自己學號後兩碼(直接改角度即可)</p>
<p>*取代Obj檔</p>
<p>*開啟Webots更改節點</p>
<p><img alt="" height="314" src="/images/螢幕擷取畫面 2025-05-16 170447.png" width="562"/></p>
<h2>Exam3</h2>
<p>Exam3 (20%): Webots 機電模擬場景的協同設計</p>
<p>操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號</p>
<hr/>
<p><span>Exam3 -1</span></p>
<p>請每位學員利用在 <a href="https://mde.tw/cd2025/content/IPv6.html">https://mde.tw/cd2025/content/IPv6.html</a> 中所分配的個人 IPv6 網址, 以 webotsw --stream 啟動個人所完成的 HW1 模擬系統. 並在其餘組員的電腦上, 以瀏覽器檢視啟動串流學員伺服器上的機構模擬. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: <span>"</span><span>國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-1 - 學員學號".</span></p>
<p><span>檔案:<a href="/downloads/41223122_EXAM3-1.7z">/downloads/41223122_EXAM3-1.7z</a></span></p>
<p><span>影片:</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/w0xF99CNWqU" width="560"></iframe></span></p>
<p><span>*此影片為協同HW1四連桿機構</span></p>
<p><span>*影片協同者為41223131</span></p>
<p><span>41223131:<a href="https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html">https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html</a></span></p>
<hr/>
<p>Exam3 -2</p>
<p><span>請每位學員利用 <a href="https://mdecd2025.github.io/hw-scrum-1/downloads/three_digit_counter.7z">three_digit_counter.7z</a> 中的七段顯示器進行修改, 以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過瀏覽器檢視參與協同組員 Webots 中所展示的學員學號. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: "國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-2 - 學員學號".</span></p>
<p><span>檔案:<a href="/downloads/41223122_EXAM3-2.7z">/downloads/41223122_EXAM3-2.7z</a></span></p>
<p>影片:</p>
<p>1-三位數七段顯示器</p>
<p>1.主人端的東西</p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/lb3xYICUpRY" width="560"></iframe></span></p>
<div>
<p>2.客人端</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/Mix7PtbbRtY" width="560"></iframe></p>
<p>*此影片為協同七段顯示器</p>
<p>*考影片同者為41223131</p>
<p>41223131:<a href="https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html">https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html</a></p>
<p>以上是協同者網站</p>
<p>2-八位數七段顯示器</p>
<p><span>1.主人端</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/X9_a0_W2rLA" width="560"></iframe></span></p>
<p><span>2.客人端</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/e3l6yF3pdlQ" width="560"></iframe></span></p>
<p>*此影片為協同七段顯示器</p>
<p>*考影片同者為41223131</p>
<p>41223131:<a href="https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html">https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html</a></p>
<p>以上是協同者網站</p>
<hr/>
<p>Exam3 -3</p>
<p><span>請各組利用 <a href="https://mde.tw/cd2025/downloads/youbot_cart_w10_websocket.7z">youbot_cart_w10_websocket.7z</a> 中的 Youbot 底座平台, 由各組組長以 webotsw --stream 啟動後, 可在其餘組員的電腦中, 透過 Websocket 客戶端程式控制平台車的前進、後退與左右轉. 完成後請各學員將操作與設定說明過程拍成影片, 上傳至 Youtube, 影片標題: "國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3-3 - 學員學號".</span></p>
<p><span>檔案:<a href="/downloads/41223122_EXAM3-3.7z">/downloads/41223122_EXAM3-3.7z</a></span></p>
<p>影片:</p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/fduks6D0WwU" width="560"></iframe></span></p>
<div>*此影片為協同操作車子</div>
<div>*協同者為41223118,41223131,41223136</div>
<div></div>
</div>
<div>41223118:<a href="https://mdecd2025.github.io/hw-zhe41223118/content/Exam3.html">https://mdecd2025.github.io/hw-zhe41223118/content/Exam3.html</a></div>
<div>41223131:<a href="https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html">https://mdecd2025.github.io/hw-yuhao-08/content/Exam3.html</a></div>
<div>41223136:<a href="https://mdecd2025.github.io/hw-41223136/content/Exam3.html">https://mdecd2025.github.io/hw-41223136/content/Exam3.html</a></div>
<div>以上是協同者的網站</div>
<div><hr/>綜整心得:</div>
<div>這次的EXAM3是利用串流來完成，我們這組先弄了EXAM3-3的車子再來是處理EXAM2跟1。EXAM2的七段顯示器是我先，我遇到的問題是在於換件號碼部分。那裏需要請教GPT。另一個問題點在於ipv6及串流分的client跟serve，有時候會有連不到的問題。</div>
<div>在這次的作業中讓我學到協同，可以與組員憶起進行模擬，一起進行小遊戲。</div>
<h1>Final</h1>
<p><span>期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%)</span></p>
<p><span>題目: <span style="background-color: #ccffcc;">Webots 動態投籃模擬系統的協同設計</span></span></p>
<p><span>說明: </span></p>
<p style="padding-left: 30px;"><span>籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上.</span></p>
<p style="padding-left: 30px;"><span>操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止.</span></p>
<p>請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中.</p>
<p>影片標題: <span style="background-color: #ffff00;">國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 </span></p>
<p>報告檔(PDF):<a href="/downloads/2a-ag4-Shootcar-project.pdf">/downloads/2a-ag4-Shootcar-project.pdf</a></p>
<hr/>
<p>1.(第一版)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/oqxn5pghIaI" width="560"></iframe></p>
<p>此版本後面兩點的籃球投不進，需改善</p>
<p>檔案:<a href="/downloads/w17-final-project-new.7z">/downloads/w17-final-project-new.7z</a></p>
<hr/>
<p>2.(第二版)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/gs9Tz17D9Bg" width="560"></iframe></p>
<p>此版本為半自動</p>
<p>檔案:<a href="/downloads/w18-final-project.7z">/downloads/w18-final-project.7z</a></p>
<hr/>
<p>心得:</p>
<p>此次報告是組別一 起完成，從HW1~3再到EXAM1~3。都次有相關連接的，一開始從最初的按鍵投籃設定四點位讓球投入。是先以人工手動方式進行投籃，而籃框部分採是順逆90度旋轉來面向籃框。這次的記分板也是一個重點從考試3-2開始，讓我們從學號開始模擬再到Final，裝感應器連接七段顯示器進行計分，感測Ball是否碰到而得分。讓我覺得這份報告離自動化更進一步。</p><h1>Brython</h1>
<p><button id="add1to100">1 add to 100</button></p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>